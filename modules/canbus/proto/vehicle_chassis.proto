syntax = "proto2";

package jmc_auto.canbus;

import "modules/common/proto/header.proto";
import "modules/canbus/proto/chassis.proto";
// next id :31
message  Vehicle_Chassis {
  // enum DrivingMode {
  //   COMPLETE_MANUAL = 0;  // human drive
  //   COMPLETE_AUTO_DRIVE = 1;
  //   AUTO_STEER_ONLY = 2;  // only steer
  //   AUTO_SPEED_ONLY = 3;  // include throttle and brake
  //   REMOTE_DRIVE=4;
  //   // security mode when manual intervention happens, only response status
  //   EMERGENCY_MODE = 5;
  // }

  // enum ErrorCode {
  //   NO_ERROR = 0;

  //   CMD_NOT_IN_PERIOD = 1;  // control cmd not in period

  //   // car chassis report error, like steer, brake, throttle, gear fault
  //   CHASSIS_ERROR = 2;

  //   MANUAL_INTERVENTION = 3;  // human manual intervention

  //   // receive car chassis can frame not in period
  //   CHASSIS_CAN_NOT_IN_PERIOD = 4;

  //   UNKNOWN_ERROR = 5;
  // }

  // enum GearPosition {
  //   GEAR_NEUTRAL = 0;
  //   GEAR_DRIVE = 1;
  //   GEAR_REVERSE = 2;
  //   GEAR_PARKING = 3;
  //   GEAR_LOW = 4;
  //   GEAR_INVALID = 5;
  //   GEAR_NONE = 6;
  // }
  
  optional float SOC = 1[default = nan];
 
  optional float speed_mps = 2 [default = nan];
  // Vehicle odometer in meters.
 
  optional float ACC_Speed = 4 [default = nan];
  // Real throttle location in [%], ranging from 0 to 100.
  optional float throttle_percentage = 5 [default = nan];
  // Real brake location in [%], ranging from 0 to 100.
  optional float brake_percentage = 6 [default = nan];
  // Real gear location.
  // optional int32 gear_location = 10; deprecated use enum replace this [id 23]
  // Real steering location in [%], ranging from 0 to 100.
  optional float steering_percentage = 7 [default = nan];
 
  optional jmc_auto.canbus.Chassis.DrivingMode driving_mode = 8 [default = COMPLETE_MANUAL];
  optional jmc_auto.canbus.Chassis.ErrorCode error_code = 9 [default = NO_ERROR];
  optional jmc_auto.canbus.Chassis.GearPosition gear_location = 10;

  // chassis also needs it own sending timestamp
  optional jmc_auto.common.Header header = 11;
  optional bool engine_started = 12;
}





